;; Draw the tree generated by the count-change
;; process from (count-change 11)

;; How many different ways can we make change from a given amount?
(define (count-change amount)
  (define (first-denom kinds-of-coins)
    (cond ((= kinds-of-coins 1) 1)
          ((= kinds-of-coins 2) 5)
          ((= kinds-of-coins 3) 10)
          ((= kinds-of-coins 4) 25)
          ((= kinds-of-coins 5) 50)))
  (define (cc amount kinds-of-coins)
    (cond ((= amount 0) 1)
          ((or ( < amount 0) (= kinds-of-coins 0)) 0)
          (else (+ (cc amount (- kinds-of-coins 1))
                   (cc (- amount (first-denom kinds-of-coins)) kinds-of-coins)))))
  (cc amount 5))

(count-change 11)
;; Result => 4

;; The tree was too big to draw, so I did it for (count-change 6) but still ran out of room
;; https://user-images.githubusercontent.com/10538978/109426464-0a0e2600-79ab-11eb-8ff7-1328e82f5467.JPG

