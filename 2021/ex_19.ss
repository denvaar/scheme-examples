; Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5)
; Are these processes iterative or recursive?
;
;
; (define (+ a b)
;   (if (= a 0)
;       b
;       (inc (+ (dec a) b))))
;
; (define (+ a b)
;   (if (= a 0)
;       b
;       (+ (dec a) (inc b))))


; They are both recursive procedures, but the process of execution that the first procedure follows is recursive,
; while the second one is iterative.
;
; That's because in the first procedure the state of each call to itself cannot be fully evaluated until the next
; call, and so on. It must reach the true branch of the predicate in order to evaluate all the parameters.
;
; Using the substitution model, the path that the code takes would look something like:
;
; (+ 4 5)
; (inc (+ (dec 4) 5))
; (inc (+ 3 5))
; (inc (inc (+ (dec 3) 5)))
; (inc (inc (+ 2 5)))
; (inc (inc (inc (+ (dec 2) 5))))
; (inc (inc (inc (+ 1 5))))
; (inc (inc (inc (inc (+ (dec 1) 5)))))
; (inc (inc (inc (inc (+ 0 5)))))
; (inc (inc (inc (inc 5))))
; (inc (inc (inc 6)))
; (inc (inc 7))
; (inc 8)
; 9
;
; The second procedure is able to maintain its state at each call. It's tail recursive.
;
; (+ 4 5)
; (+ 3 6)
; (+ 2 7)
; (+ 1 8)
; (+ 0 9)
; 9
